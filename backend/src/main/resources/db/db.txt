<유저정보>
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    cuid VARCHAR(36) NOT NULL UNIQUE COMMENT '채팅용 고유 ID',
    name VARCHAR(50) NOT NULL,
    nickname VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    phone VARCHAR(20) NOT NULL,
    birth_date DATE NOT NULL COMMENT '생년월일',
    profile_image VARCHAR(500) DEFAULT NULL COMMENT '대표 이미지 URL',
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
<방채팅>
CREATE TABLE chat_rooms (
    room_id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(100),
    type VARCHAR(10),
    max_users INT,
    image_url VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE chat_messages (
   id BIGINT AUTO_INCREMENT PRIMARY KEY,
   room_id VARCHAR(36),
   sender_cuid VARCHAR(36),
   sender_nickname VARCHAR(50) NOT NULL,
   content TEXT,
   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   FOREIGN KEY (room_id) REFERENCES chat_rooms(room_id)
);

<게시글>
-- 게시글 테이블
CREATE TABLE posts (
    post_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    category ENUM('노하우&Q&A', '실시간채팅', '업종별/연차별', '정보공유') NOT NULL COMMENT '게시글 카테고리',
    user_id BIGINT NOT NULL COMMENT '작성자 ID',
    img_url VARCHAR(500) COMMENT '대표 이미지 URL',
    content TEXT NOT NULL COMMENT '게시글 내용',
    view_count INT DEFAULT 0 COMMENT '조회수',
    heart_count INT DEFAULT 0 COMMENT '좋아요 수',
    comment_count INT DEFAULT 0 COMMENT '댓글 수',
    is_deleted BOOLEAN DEFAULT FALSE COMMENT '삭제 여부',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '작성 시간',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '수정 시간',
    INDEX idx_category_created (category, created_at DESC)
);

-- 게시글 좋아요 테이블
CREATE TABLE post_hearts (
    heart_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    post_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL COMMENT '좋아요 누른 사용자 ID',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (post_id) REFERENCES posts(post_id),
    UNIQUE KEY unique_post_user (post_id, user_id) COMMENT '중복 좋아요 방지'
);

-- 게시글 신고 테이블
CREATE TABLE post_reports (
    report_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    post_id BIGINT NOT NULL,
    reporter_id BIGINT NOT NULL COMMENT '신고한 사용자 ID',
    report_reason VARCHAR(500) NOT NULL COMMENT '신고 사유',
    status VARCHAR(20) DEFAULT 'PENDING' COMMENT '처리상태 (PENDING, PROCESSED, REJECTED)',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    processed_at TIMESTAMP NULL COMMENT '처리 시간',
    FOREIGN KEY (post_id) REFERENCES posts(post_id)
);

-- 댓글 대댓글
CREATE TABLE comments (
    comment_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    post_id BIGINT NOT NULL,
    user_id INT NOT NULL COMMENT '작성자 ID',  -- BIGINT에서 INT로 변경
    parent_id BIGINT DEFAULT NULL COMMENT '부모 댓글 ID (대댓글인 경우)',
    content TEXT NOT NULL COMMENT '댓글 내용',
    is_deleted BOOLEAN DEFAULT FALSE COMMENT '삭제 여부',
    likes_count INT DEFAULT 0 COMMENT '좋아요 수',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (post_id) REFERENCES posts(post_id),
    FOREIGN KEY (user_id) REFERENCES users(id),  -- users(user_id)에서 users(id)로 변경
    FOREIGN KEY (parent_id) REFERENCES comments(comment_id)
);

-- 댓글 좋아요 
CREATE TABLE comment_likes (
    like_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    comment_id BIGINT NOT NULL,
    user_id INT NOT NULL,  -- BIGINT에서 INT로 변경
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY unique_like (comment_id, user_id),
    FOREIGN KEY (comment_id) REFERENCES comments(comment_id),
    FOREIGN KEY (user_id) REFERENCES users(id)  -- users(user_id)에서 users(id)로 변경
);



-- 공지사항 테이블
CREATE TABLE notices (
    notice_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(200) NOT NULL COMMENT '제목',
    content TEXT NOT NULL COMMENT '내용',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '작성일'
);

-- 1:1 문의 테이블
CREATE TABLE inquiries (
    inquiry_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL COMMENT '작성자 ID',
    category ENUM('채용관련', '서비스관련') NOT NULL COMMENT '문의 카테고리',
    title VARCHAR(200) NOT NULL COMMENT '제목',
    content TEXT NOT NULL COMMENT '문의 내용',
    image_url1 VARCHAR(500) COMMENT '이미지1 URL',
    image_url2 VARCHAR(500) COMMENT '이미지2 URL',
    image_url3 VARCHAR(500) COMMENT '이미지3 URL',
    status ENUM('답변예정', '답변완료') DEFAULT '답변예정' COMMENT '처리상태',
    answer TEXT COMMENT '답변 내용',
    answer_date TIMESTAMP NULL COMMENT '답변 일자',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '작성일',
    FOREIGN KEY (user_id) REFERENCES users(id)
);

----------------------------이력서
-- 기본 이력서 정보
CREATE TABLE resume (
    resume_id INT PRIMARY KEY AUTO_INCREMENT,
    id INT NOT NULL COMMENT '사용자 ID',
    resume_photo VARCHAR(255),
    resume_title VARCHAR(100) NOT NULL,
    is_default BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id) REFERENCES users(id)
);

-- 학력 정보
CREATE TABLE r_education (
    education_id INT PRIMARY KEY AUTO_INCREMENT,
    resume_id INT NOT NULL,
    school_type VARCHAR(20) NOT NULL COMMENT '고등학교, 대학교, 대학원 등',
    school_name VARCHAR(100) NOT NULL,
    major VARCHAR(100),
    admission_date VARCHAR(7) NOT NULL COMMENT '입학년월 YYYY-MM',
    graduation_date VARCHAR(7) NOT NULL COMMENT '졸업년월 YYYY-MM',
    max_score DECIMAL(3,2) COMMENT '만점 (예: 4.5)',
    score DECIMAL(3,2) COMMENT '본인 학점',
    FOREIGN KEY (resume_id) REFERENCES resume(resume_id) ON DELETE CASCADE
);

-- 언어능력
CREATE TABLE r_language_skill (
    language_skill_id INT PRIMARY KEY AUTO_INCREMENT,
    resume_id INT NOT NULL,
    language_name VARCHAR(50) NOT NULL COMMENT '외국어명',
    speaking_level VARCHAR(20) COMMENT '회화능력',
    test_name VARCHAR(50) COMMENT '시험명',
    score VARCHAR(20) COMMENT '점수/급수',
    acquisition_date VARCHAR(7) COMMENT '취득년월 YYYY-MM',
    FOREIGN KEY (resume_id) REFERENCES resume(resume_id) ON DELETE CASCADE
);

-- 자격증
CREATE TABLE r_certificate (
    certificate_id INT PRIMARY KEY AUTO_INCREMENT,
    resume_id INT NOT NULL,
    certificate_name VARCHAR(100) NOT NULL COMMENT '자격증명',
    issuing_organization VARCHAR(100) NOT NULL COMMENT '발행처',
    acquisition_date VARCHAR(7) NOT NULL COMMENT '취득년월 YYYY-MM',
    FOREIGN KEY (resume_id) REFERENCES resume(resume_id) ON DELETE CASCADE
);

-- 대외활동
CREATE TABLE r_activity (
    activity_id INT PRIMARY KEY AUTO_INCREMENT,
    resume_id INT NOT NULL,
    activity_type VARCHAR(50) NOT NULL COMMENT '대외활동 유형',
    organization_name VARCHAR(100) NOT NULL COMMENT '기관명',
    start_date VARCHAR(7) NOT NULL COMMENT '시작년월 YYYY-MM',
    end_date VARCHAR(7) NOT NULL COMMENT '종료년월 YYYY-MM',
    description TEXT COMMENT '활동내용',
    FOREIGN KEY (resume_id) REFERENCES resume(resume_id) ON DELETE CASCADE
);

-- 경력
CREATE TABLE r_career (
    career_id INT PRIMARY KEY AUTO_INCREMENT,
    resume_id INT NOT NULL,
    career_title VARCHAR(100) NOT NULL COMMENT '경력 제목',
    start_date VARCHAR(7) NOT NULL COMMENT '시작년월 YYYY-MM',
    end_date VARCHAR(7) COMMENT '종료년월 YYYY-MM',
    FOREIGN KEY (resume_id) REFERENCES resume(resume_id) ON DELETE CASCADE
);

--포트폴리오
CREATE TABLE r_portfolio (
    portfolio_id INT PRIMARY KEY AUTO_INCREMENT,
    resume_id INT NOT NULL,
    portfolio_name VARCHAR(100) NOT NULL COMMENT '포트폴리오명',
    url VARCHAR(255) COMMENT 'URL',
    file_path VARCHAR(255) COMMENT '첨부파일 경로',
    FOREIGN KEY (resume_id) REFERENCES resume(resume_id) ON DELETE CASCADE
);

--알림테이블
CREATE TABLE notification (
    notification_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL COMMENT '수신자 ID',
    title VARCHAR(200) NOT NULL COMMENT '알림 제목',
    content TEXT NOT NULL COMMENT '알림 내용',
    is_read BOOLEAN DEFAULT false COMMENT '읽음 여부',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '알림 발생 시간',
    read_at TIMESTAMP NULL COMMENT '읽은 시간',
    FOREIGN KEY (user_id) REFERENCES users(id),
    INDEX idx_user_created (user_id, created_at DESC) COMMENT '사용자별 최신 알림 조회용 인덱스'
);



CREATE TABLE admin (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    admin_id VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 초기 관리자 계정 생성 (비밀번호는 "test1234@" 이라고 가정)
INSERT INTO admin (admin_id, password) 
VALUES ('admin', '$2a$10$I6xrz1A8qsEPrIsJwEuTKe56CqG991Vp63L0VsbxWm7sLQ84Q7Pa6');