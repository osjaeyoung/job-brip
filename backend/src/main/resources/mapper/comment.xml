<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mybatis.comment">
    <!-- 댓글 목록 조회 (부모 댓글만) -->
    <select id="getComments" parameterType="map" resultType="map">
        SELECT 
            c.comment_id,
            c.post_id,
            c.user_id,
            u.name as user_name,
            u.nickname as user_nickname,
            c.content,
            c.likes_count,
            c.created_at,
            c.updated_at,
            (SELECT COUNT(*) FROM comments 
             WHERE parent_id = c.comment_id AND is_deleted = false) as reply_count
        FROM comments c
        JOIN users u ON c.user_id = u.id
        WHERE c.post_id = #{postId}
        AND c.parent_id IS NULL
        AND c.is_deleted = false
        ORDER BY c.created_at DESC
    </select>

    <!-- 대댓글 목록 조회 -->
    <select id="getReplies" parameterType="map" resultType="map">
        SELECT 
            c.comment_id,
            c.post_id,
            c.user_id,
            u.name as user_name,
            u.nickname as user_nickname,
            c.content,
            c.likes_count,
            c.created_at,
            c.updated_at
        FROM comments c
        JOIN users u ON c.user_id = u.id
        WHERE c.parent_id = #{parentId}
        AND c.is_deleted = false
        ORDER BY c.created_at ASC
    </select>

    <!-- 댓글 상세 조회 -->
    <select id="getCommentById" parameterType="map" resultType="map">
        SELECT *
        FROM comments
        WHERE comment_id = #{commentId}
        AND is_deleted = false
    </select>
    
    <!-- 댓글 작성 -->
    <insert id="insertComment" parameterType="map">
        INSERT INTO comments (
            post_id,
            user_id,
            content,
            created_at,
            updated_at
        ) VALUES (
            #{postId},
            #{userId},
            #{content},
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
        )
    </insert>

    <!-- 대댓글 작성 -->
    <insert id="insertReply" parameterType="map">
        INSERT INTO comments (
            post_id,
            user_id,
            parent_id,
            content,
            created_at,
            updated_at
        ) VALUES (
            #{postId},
            #{userId},
            #{parentId},
            #{content},
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
        )
    </insert>

    <!-- 댓글 좋아요 조회 -->
    <select id="getCommentLike" parameterType="map" resultType="map">
        SELECT *
        FROM comment_likes
        WHERE comment_id = #{commentId}
        AND user_id = #{userId}
    </select>

    <!-- 댓글 좋아요 추가 -->
    <insert id="insertCommentLike" parameterType="map">
        INSERT INTO comment_likes (
            comment_id,
            user_id,
            created_at
        ) VALUES (
            #{commentId},
            #{userId},
            CURRENT_TIMESTAMP
        )
    </insert>

    <!-- 댓글 좋아요 삭제 -->
    <delete id="deleteCommentLike" parameterType="map">
        DELETE FROM comment_likes
        WHERE comment_id = #{commentId}
        AND user_id = #{userId}
    </delete>

    <!-- 댓글 좋아요 수 증가 -->
    <update id="incrementLikeCount" parameterType="map">
        UPDATE comments
        SET likes_count = likes_count + 1
        WHERE comment_id = #{commentId}
    </update>

    <!-- 댓글 좋아요 수 감소 -->
    <update id="decrementLikeCount" parameterType="map">
        UPDATE comments
        SET likes_count = likes_count - 1
        WHERE comment_id = #{commentId}
        AND likes_count > 0
    </update>
</mapper>
